<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chm.book.article.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.chm.book.article.domain.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="author_id" jdbcType="BIGINT" property="authorId" />
    <result column="author_name" jdbcType="VARCHAR" property="authorName" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="to_uid" jdbcType="BIGINT" property="toUid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, parent_id, article_id, author_id, author_name, content, create_date, level, to_uid
  </sql>
  <select id="selectByArticleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>

  <select id="selectByAuthorId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
    where author_id = #{authorId,jdbcType=INTEGER}
  </select>

  <delete id="delete" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.chm.book.article.domain.Comment">
    insert into comment (id, parent_id, article_id,
      author_id, author_name, content,
      create_date, level, to_uid
      )
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER},
      #{authorId,jdbcType=BIGINT}, #{authorName,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
      #{createDate,jdbcType=TIMESTAMP}, #{level,jdbcType=VARCHAR}, #{toUid,jdbcType=BIGINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.chm.book.article.domain.Comment">
    update comment
    set parent_id = #{parentId,jdbcType=INTEGER},
      article_id = #{articleId,jdbcType=INTEGER},
      author_id = #{authorId,jdbcType=BIGINT},
      author_name = #{authorName,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      level = #{level,jdbcType=VARCHAR},
      to_uid = #{toUid,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.chm.book.article.domain.Comment">
    insert into comment (id, parent_id, article_id,
                         author_id, author_name, content,
                         create_date, level, to_uid
    )
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER},
            #{authorId,jdbcType=BIGINT}, #{authorName,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
            #{createDate,jdbcType=TIMESTAMP}, #{level,jdbcType=VARCHAR}, #{toUid,jdbcType=BIGINT}
           )
    ON DUPLICATE KEY UPDATE
      content = values(content)
  </insert>

</mapper>
