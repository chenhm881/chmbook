spring:
  application:
    name: blog-service
  datasource:
    type: com.alibaba.druid.pool.xa.DruidXADataSource
    master:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://101.34.6.152:32306/ming_blog?useSSL=false&allowMultiQueries=true&autoReconnect=true
      username: root
      password: mysql
    cluster:
    - key: database2
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://101.34.6.152:32306/ming_blog?useSSL=false&allowMultiQueries=true&autoReconnect=true
      username: root
      password: mysql
  jta:
    log-dir: classpath:tx-logs

  kafka:
    bootstrap-servers: 101.34.6.152:32092
    producer:
      transaction-id-prefix: kafka_tx
      acks: 1
      retries: 3
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
server:
  port: 8181
  servlet:
    session:
      cookie:
        name: OAUTH2SESSION

feign:
  circuitbreaker:
    enabled: true

hystrix:
  shareSecurityContext: true
  command:
    default:
      execution:
        timeout:
          enabled: false



eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ipaddress}:${spring.application.name}:${server.port}:@project.version@
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8762/eureka

#security:
#  oauth2:
#    client:
#      clientId: blog
#      clientSecret: 123
#      accessTokenUri: http://localhost:8771/oauth/token
#      userAuthorizationUri: http://localhost:8771/oauth/authorize
#      pre-established-redirect-uri: http://localhost:8181/authorize/login
#      authorized-grant-types: code,refresh_token
#      client-authentication-scheme: header
#      use-current-uri: true
#    resource:
#      tokenInfoUri: http://localhost:8771/oauth/check_token
#      userInfoUri: http://localhost:8771/user
#      jwk:
#        key-set-uri: http://localhost:8771/oauth/token_key
#      prefer-token-info: true
#    sso:
#      login-path: /login


security:
  oauth2:
    client:
      client-id: blog
      client-secret: 123
      access-token-uri: http://localhost:8771/oauth/token
      user-authorization-uri: http://localhost:8771/oauth/authorize
    resource:
      tokenInfoUri: http://localhost:8771/oauth/check_token
#      jwt:
#        key-uri: http://localhost:8771/oauth/token_key

mybatis:
  config-location:  classpath:mybatis-config.xml
  type-aliases-package: com.chm.book.blog.domain
  configuration:
    map-underscore-to-camel-case: true

oauth2:
  key:
    publicKey: oauth2/rsa_public_key.pem

custom:
  dispatch:
    redirectUri: http://localhost:3000/about

